name: Manual Build and Test

# Manual workflow for building and testing without ADE deployment
# This workflow can be triggered manually and does not include ADE deployment steps
permissions:
  contents: read
on:
  workflow_dispatch:
    inputs:
      node-version:
        description: 'Node.js version'
        required: false
        default: '20'
        type: choice
        options:
        - '18'
        - '20'
        - '22'
      dotnet-version:
        description: '.NET version'
        required: false
        default: '8.0.x'
        type: choice
        options:
        - '6.0.x'
        - '7.0.x'
        - '8.0.x'
      run-full-validation:
        description: 'Run full Bicep validation'
        required: false
        default: true
        type: boolean

# Cancel previous runs when manually triggering new ones
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  bicep-validation:
    name: Infrastructure Validation
    if: ${{ inputs.run-full-validation }}
    uses: ./.github/workflows/shared-bicep-validation.yml
    secrets: inherit

  frontend-build:
    name: Frontend Build and Test
    uses: ./.github/workflows/shared-frontend-build.yml
    with:
      node-version: ${{ inputs.node-version }}
      upload-artifacts: true
      artifact-name: frontend-dist-manual
    secrets: inherit

  backend-build:
    name: Backend Build and Test
    uses: ./.github/workflows/shared-backend-build.yml
    with:
      dotnet-version: ${{ inputs.dotnet-version }}
      upload-artifacts: true
      artifact-name: backend-publish-manual
    secrets: inherit

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [bicep-validation, frontend-build, backend-build]
    if: always()
    
    steps:
    - name: Download frontend artifacts
      uses: actions/download-artifact@v6
      with:
        name: frontend-dist-manual
        path: ./artifacts/frontend/
        
    - name: Download backend artifacts
      uses: actions/download-artifact@v6
      with:
        name: backend-publish-manual
        path: ./artifacts/backend/
        
    - name: Display build summary
      run: |
        echo "## üèóÔ∏è Manual Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìã Build Configuration" >> $GITHUB_STEP_SUMMARY
        echo "- **Node.js Version**: ${{ inputs.node-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **dotnet Version**: ${{ inputs.dotnet-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Full Validation**: ${{ inputs.run-full-validation }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered By**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Bicep validation summary (if enabled)
        if [ "${{ inputs.run-full-validation }}" = "true" ]; then
          if [ "${{ needs.bicep-validation.result }}" = "success" ]; then
            echo "### ‚úÖ Bicep Infrastructure Validation Successful" >> $GITHUB_STEP_SUMMARY
            echo "- **Templates validated**: Main orchestrator, Backend environment, Frontend environment" >> $GITHUB_STEP_SUMMARY
            echo "- **Validation scope**: Syntax, parameters, dependencies, RBAC" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ‚ùå Bicep Infrastructure Validation Failed" >> $GITHUB_STEP_SUMMARY
            echo "- **Status**: ${{ needs.bicep-validation.result }}" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "### ‚è≠Ô∏è Bicep Infrastructure Validation Skipped" >> $GITHUB_STEP_SUMMARY
          echo "- **Reason**: Full validation was disabled in workflow inputs" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Frontend summary
        if [ -d "./artifacts/frontend" ]; then
          echo "### ‚úÖ Frontend Build Successful" >> $GITHUB_STEP_SUMMARY
          echo "- **Build output**: $(du -sh ./artifacts/frontend | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "- **Files**: $(find ./artifacts/frontend -type f | wc -l) files generated" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ‚ùå Frontend Build Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Backend summary
        if [ -d "./artifacts/backend" ]; then
          echo "### ‚úÖ Backend Build Successful" >> $GITHUB_STEP_SUMMARY
          echo "- **Build output**: $(du -sh ./artifacts/backend | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "- **Files**: $(find ./artifacts/backend -type f | wc -l) files generated" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ‚ùå Backend Build Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìã Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "- Review build artifacts if needed" >> $GITHUB_STEP_SUMMARY
        echo "- Run local tests: \`npm test\` (frontend) and \`dotnet test\` (backend)" >> $GITHUB_STEP_SUMMARY
        echo "- Deploy to Azure using deployment scripts in \`deploy-scripts/\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Note**: This manual workflow does not include ADE deployment" >> $GITHUB_STEP_SUMMARY
        
    - name: Check build status
      run: |
        # Check validation status (only if enabled)
        validation_success=true
        if [ "${{ inputs.run-full-validation }}" = "true" ]; then
          if [ "${{ needs.bicep-validation.result }}" != "success" ]; then
            validation_success=false
          fi
        fi
        
        # Check build status
        build_success=true
        if [ "${{ needs.frontend-build.result }}" != "success" ]; then
          build_success=false
        fi
        if [ "${{ needs.backend-build.result }}" != "success" ]; then
          build_success=false
        fi
        
        if [ "$validation_success" = "true" ] && [ "$build_success" = "true" ]; then
          echo "‚úÖ All builds and validations completed successfully!"
          exit 0
        else
          echo "‚ùå One or more jobs failed:"
          if [ "${{ inputs.run-full-validation }}" = "true" ]; then
            echo "Bicep Validation: ${{ needs.bicep-validation.result }}"
          fi
          echo "Frontend Build: ${{ needs.frontend-build.result }}"
          echo "Backend Build: ${{ needs.backend-build.result }}"
          exit 1
        fi